generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING_SHADOW")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
}

model Gig {
  // id         String  @id @default(cuid())
  id         String  @unique
  client     Client  @relation(fields: [clientId], references: [id])
  clientId   String
  // serial   Int    @default(autoincrement())
  serial     Int?
  calendarId String?

  driver     Source? @relation("sourceOfDriver", fields: [driverId], references: [id])
  driverId   String?
  mrsSanta   Source? @relation("sourceOfMrsSanta", fields: [mrsSantaId], references: [id])
  mrsSantaId String?
  santa      Source? @relation("sourceOfSanta", fields: [santaId], references: [id])
  santaId    String?

  contactEmail        String?
  contactName         String?
  contactPhoneCell    String?
  contactPhoneLand    String?
  date                DateTime
  invoiceNumber       String?
  notesGig            String?
  notesVenue          String?
  amountPaid          Decimal? @db.Decimal(10, 2)
  price               Decimal  @db.Decimal(10, 2)
  timeEnd             DateTime
  timeStart           DateTime
  travelType          String?
  venueAddressCity    String
  venueAddressName    String
  venueAddressState   String
  venueAddressStreet  String
  venueAddressStreet2 String?
  venueAddressZip     String?
  venueType           String
  isSoftHold          Boolean?

  createdAt DateTime
  createdBy String
  updatedAt DateTime
  updatedBy String
}

model Client {
  id        String @unique
  nameFirst String
  nameLast  String
  gigs      Gig[]
}

model Source {
  id           String @id @default(cuid())
  nameFirst    String
  nameLast     String
  gigsDriver   Gig[]  @relation("sourceOfDriver")
  gigsMrsSanta Gig[]  @relation("sourceOfMrsSanta")
  gigsSanta    Gig[]  @relation("sourceOfSanta")

  createdAt DateTime
  createdBy String
  updatedAt DateTime
  updatedBy String
}

enum TravelType {
  Self
  PublicTransport
}
